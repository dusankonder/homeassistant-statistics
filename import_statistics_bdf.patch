From 1a2b3c4d5e6f7890 Mon Sep 17 00:00:00 2001
From: Your Name <you@example.com>
Date: Tue, 10 Sep 2025 12:00:00 +0200
Subject: [PATCH] Add B/D/F mode with kW and derived kWh series

---
 custom_components/import_statistics/const.py        | 10 +++++++
 custom_components/import_statistics/prepare_data.py | 46 +++++++++++++++++++++
 2 files changed, 56 insertions(+)

diff --git a/custom_components/import_statistics/const.py b/custom_components/import_statistics/const.py
index abcdef1..1234567 100644
--- a/custom_components/import_statistics/const.py
+++ b/custom_components/import_statistics/const.py
@@
 ATTR_UNIT_SUPPLY = "unit_supply"
 
 # Extra IDs for derived kWh series
+ATTR_STAT_ID_CONSUMPTION_KWH = "statistic_id_consumption_kwh"
+ATTR_STAT_ID_SUPPLY_KWH = "statistic_id_supply_kwh"
+ATTR_UNIT_CONSUMPTION_KWH = "unit_consumption_kwh"
+ATTR_UNIT_SUPPLY_KWH = "unit_supply_kwh"
+
+# Column names used in supplier CSV (B/D/F)
+CSV_COL_DATETIME = "Dátum a čas merania"
+CSV_COL_CONSUMPTION = "1.5.0 - Činný odber (kW)"
+CSV_COL_SUPPLY = "2.5.0 - Činná dodávka (kW)"
diff --git a/custom_components/import_statistics/prepare_data.py b/custom_components/import_statistics/prepare_data.py
index 89abcde..7654321 100644
--- a/custom_components/import_statistics/prepare_data.py
+++ b/custom_components/import_statistics/prepare_data.py
@@ def handle_dataframe_bdf(
-    for stat_id, unit_hint in [
-        (stat_id_consumption, unit_consumption),
-        (stat_id_supply, unit_supply),
-    ]:
+    for stat_id, unit_hint in [
+        (stat_id_consumption, unit_consumption),
+        (stat_id_supply, unit_supply),
+        (call.data.get(ATTR_STAT_ID_CONSUMPTION_KWH, "sensor.energy_consumption_kwh"),
+         call.data.get(ATTR_UNIT_CONSUMPTION_KWH, "kWh")),
+        (call.data.get(ATTR_STAT_ID_SUPPLY_KWH, "sensor.energy_supply_kwh"),
+         call.data.get(ATTR_UNIT_SUPPLY_KWH, "kWh")),
+    ]:
         source = helpers.get_source(stat_id)
         metadata = {
             "has_mean": False,
@@ def handle_dataframe_bdf(
-        # consumption -> sum
-        cons_row = {"start": row["start"], "sum": row["consumption"]}
-        cons_stat = helpers.get_sum_stat_relaxed(cons_row, tz, datetime_format)
-        stats[stat_id_consumption][1].append(cons_stat)
-
-        # supply -> sum
-        supp_row = {"start": row["start"], "sum": row["supply"]}
-        supp_stat = helpers.get_sum_stat_relaxed(supp_row, tz, datetime_format)
-        stats[stat_id_supply][1].append(supp_stat)
+        # consumption (kW)
+        cons_row = {"start": row["start"], "sum": row["consumption"]}
+        stats[stat_id_consumption][1].append(
+            helpers.get_sum_stat_relaxed(cons_row, tz, datetime_format)
+        )
+
+        # supply (kW)
+        supp_row = {"start": row["start"], "sum": row["supply"]}
+        stats[stat_id_supply][1].append(
+            helpers.get_sum_stat_relaxed(supp_row, tz, datetime_format)
+        )
+
+        # derived consumption (kWh)
+        cons_kwh_row = {"start": row["start"], "sum": row["consumption"] * 0.25}
+        stats[call.data.get(ATTR_STAT_ID_CONSUMPTION_KWH, "sensor.energy_consumption_kwh")][1].append(
+            helpers.get_sum_stat_relaxed(cons_kwh_row, tz, datetime_format)
+        )
+
+        # derived supply (kWh)
+        supp_kwh_row = {"start": row["start"], "sum": row["supply"] * 0.25}
+        stats[call.data.get(ATTR_STAT_ID_SUPPLY_KWH, "sensor.energy_supply_kwh")][1].append(
+            helpers.get_sum_stat_relaxed(supp_kwh_row, tz, datetime_format)
+        )
 
     return stats
-- 
2.34.1
